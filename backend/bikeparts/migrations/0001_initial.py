# Generated by Django 2.2.1 on 2019-10-12 16:46

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bikeproperties', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('slug', models.SlugField()),
            ],
        ),
        migrations.CreateModel(
            name='Wheels',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('applications', models.ManyToManyField(related_name='wheelss', to='bikeproperties.Application')),
                ('axle_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wheels', to='bikeproperties.AxleType')),
                ('brake_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wheels', to='bikeproperties.BrakeType')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wheelss', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='wheelss', to='bikeproperties.Color')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='wheelss', to='bikeproperties.Group')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='wheelss', to='bikeproperties.Material')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='wheels', to='bikeproperties.WheelSize')),
            ],
            options={
                'verbose_name_plural': 'Wheels',
            },
        ),
        migrations.CreateModel(
            name='Stem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('length', models.DecimalField(decimal_places=0, max_digits=3)),
                ('angle', models.DecimalField(decimal_places=0, max_digits=3)),
                ('applications', models.ManyToManyField(related_name='stems', to='bikeproperties.Application')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stems', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='stems', to='bikeproperties.Color')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='stems', to='bikeproperties.Group')),
                ('handlebar_size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stems', to='bikeproperties.HandlebarSize')),
                ('headtube', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='stems', to='bikeproperties.Headtube')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='stems', to='bikeproperties.Material')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Seatpost',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('length', models.DecimalField(decimal_places=0, max_digits=3)),
                ('travel', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('applications', models.ManyToManyField(related_name='seatposts', to='bikeproperties.Application')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seatposts', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='seatposts', to='bikeproperties.Color')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='seatposts', to='bikeproperties.Group')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='seatposts', to='bikeproperties.Material')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seatposts', to='bikeproperties.SeatclampSize')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Saddle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('length', models.DecimalField(decimal_places=0, max_digits=3)),
                ('width', models.DecimalField(decimal_places=0, max_digits=3)),
                ('applications', models.ManyToManyField(related_name='saddles', to='bikeproperties.Application')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='saddles', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='saddles', to='bikeproperties.Color')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='saddles', to='bikeproperties.Group')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='saddles', to='bikeproperties.Material')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rotor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('applications', models.ManyToManyField(related_name='rotors', to='bikeproperties.Application')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rotors', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rotors', to='bikeproperties.Color')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rotors', to='bikeproperties.Group')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rotors', to='bikeproperties.Material')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rotors', to='bikeproperties.BrakeRotorSize')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RearDerailleur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('applications', models.ManyToManyField(related_name='rearderailleurs', to='bikeproperties.Application')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rearderailleurs', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rearderailleurs', to='bikeproperties.Color')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rearderailleurs', to='bikeproperties.Group')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='rearderailleurs', to='bikeproperties.Material')),
                ('mount_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='rear_derailleurs', to='bikeproperties.RearDerailleurMount')),
                ('speed_compatibility', models.ManyToManyField(related_name='rear_derailleurs', to='bikeproperties.SpeedCompatibility')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Handlebar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('width', models.DecimalField(decimal_places=0, max_digits=3)),
                ('applications', models.ManyToManyField(related_name='handlebars', to='bikeproperties.Application')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='handlebars', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='handlebars', to='bikeproperties.Color')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='handlebars', to='bikeproperties.Group')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='handlebars', to='bikeproperties.Material')),
                ('size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='handlebars', to='bikeproperties.HandlebarSize')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FrontDerailleur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('applications', models.ManyToManyField(related_name='frontderailleurs', to='bikeproperties.Application')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='frontderailleurs', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='frontderailleurs', to='bikeproperties.Color')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='frontderailleurs', to='bikeproperties.Group')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='frontderailleurs', to='bikeproperties.Material')),
                ('mount_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='front_derailleurs', to='bikeproperties.FrontDerailleurMount')),
                ('speed_compatibility', models.ManyToManyField(related_name='front_derailleurs', to='bikeproperties.SpeedCompatibility')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Frame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('size', models.DecimalField(decimal_places=1, max_digits=2)),
                ('recommended_fork_travel', models.DecimalField(blank=True, decimal_places=0, max_digits=3, null=True)),
                ('applications', models.ManyToManyField(related_name='frames', to='bikeproperties.Application')),
                ('bottom_bracket_size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='frames', to='bikeproperties.BottomBracketSize')),
                ('brake_type', models.ManyToManyField(related_name='frames', to='bikeproperties.BrakeType')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='frames', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='frames', to='bikeproperties.Color')),
                ('front_derailleur_mount_type', models.ManyToManyField(related_name='frames', to='bikeproperties.FrontDerailleurMount')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='frames', to='bikeproperties.Group')),
                ('headtube', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='frames', to='bikeproperties.Headtube')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='frames', to='bikeproperties.Material')),
                ('max_brake_rotor_size', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='frames', to='bikeproperties.BrakeRotorSize')),
                ('rear_derailleur_mount_type', models.ManyToManyField(related_name='frames', to='bikeproperties.RearDerailleurMount')),
                ('seatclamp_size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='frames', to='bikeproperties.SeatclampSize')),
                ('wheel_sizes', models.ManyToManyField(related_name='frames', to='bikeproperties.WheelSize')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Fork',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('suspension_type', models.CharField(choices=[('Oil', 'Oil'), ('Air', 'Air')], max_length=16)),
                ('travel', models.DecimalField(decimal_places=0, max_digits=3)),
                ('applications', models.ManyToManyField(related_name='forks', to='bikeproperties.Application')),
                ('axle_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='forks', to='bikeproperties.AxleType')),
                ('brake_type', models.ManyToManyField(related_name='forks', to='bikeproperties.BrakeType')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='forks', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='forks', to='bikeproperties.Color')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='forks', to='bikeproperties.Group')),
                ('headtube', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='forks', to='bikeproperties.Headtube')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='forks', to='bikeproperties.Material')),
                ('wheel_sizes', models.ManyToManyField(related_name='forks', to='bikeproperties.WheelSize')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DerailleurLever',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('applications', models.ManyToManyField(related_name='derailleurlevers', to='bikeproperties.Application')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='derailleurlevers', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='derailleurlevers', to='bikeproperties.Color')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='derailleurlevers', to='bikeproperties.Group')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='derailleurlevers', to='bikeproperties.Material')),
                ('speed_compatibility', models.ManyToManyField(related_name='derailleur_levers', to='bikeproperties.SpeedCompatibility')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Crankset',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gradiation', models.CharField(max_length=8)),
                ('arm_length', models.DecimalField(decimal_places=0, max_digits=3)),
                ('applications', models.ManyToManyField(related_name='cranksets', to='bikeproperties.Application')),
                ('bottom_bracket_size', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cranksets', to='bikeproperties.BottomBracketSize')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cranksets', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cranksets', to='bikeproperties.Color')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cranksets', to='bikeproperties.Group')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cranksets', to='bikeproperties.Material')),
                ('speed_compatibility', models.ManyToManyField(related_name='cranksets', to='bikeproperties.SpeedCompatibility')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cassette',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('gradiation', models.CharField(max_length=35)),
                ('applications', models.ManyToManyField(related_name='cassettes', to='bikeproperties.Application')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='cassettes', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cassettes', to='bikeproperties.Color')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cassettes', to='bikeproperties.Group')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='cassettes', to='bikeproperties.Material')),
                ('speed_compatibility', models.ManyToManyField(related_name='cassettes', to='bikeproperties.SpeedCompatibility')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BrakeLever',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('applications', models.ManyToManyField(related_name='brakelevers', to='bikeproperties.Application')),
                ('brake_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brake_levers', to='bikeproperties.BrakeType')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brakelevers', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='brakelevers', to='bikeproperties.Color')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='brakelevers', to='bikeproperties.Group')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='brakelevers', to='bikeproperties.Material')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Brake',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model', models.CharField(max_length=32, unique=True)),
                ('weight', models.DecimalField(decimal_places=2, max_digits=8)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('applications', models.ManyToManyField(related_name='brakes', to='bikeproperties.Application')),
                ('brake_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brakes', to='bikeproperties.BrakeType')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brakes', to='bikeproperties.Brand')),
                ('color', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='brakes', to='bikeproperties.Color')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='brakes', to='bikeproperties.Group')),
                ('material', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='brakes', to='bikeproperties.Material')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
